-- Haskell Playground 1.0

import Test.QuickCheck

let index = 312051

-- part 1

positionFromIndex index
manhattanDistance $ positionFromIndex index

-- part 2

newtype Whole = Whole Int deriving (Eq, Ord, Show)
instance Arbitrary Whole where
  arbitrary = fmap (\x -> Whole (1 + abs x)) arbitrary

quickCheckResult (\(Whole n) ->
      (indexFromPosition . positionFromIndex) n == n)

map valueAtIndex [1..23]

head $ dropWhile (< index) (map valueAtIndex [1..])

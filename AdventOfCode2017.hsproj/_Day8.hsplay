-- Haskell Playground 1.0

import Data.Either
import Data.Foldable

testinput = "b inc 5 if a > 1\na inc 1 if b < 5\nc dec -10 if a >= 1\nc inc -20 if c == 10"

testprogram = rights $ map (parse parseInstruction "") (lines testinput)

findMax = maximumBy (\a b -> compare (snd a) (snd b))

input <- fmap lines (readFile "day8.txt")
testinput = rights $ map (parse parseInstruction "") input

-- Part 1

part1 = findMax . listState . (runProgram newState)
part1 testprogram
part1 testinput

-- Part 2

allStates s = concat $ (listState s) : (history s)

part2 = findMax . allStates . (runProgram newState)
part2 testprogram
part2 testinput

